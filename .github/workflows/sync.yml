# Название нашей инструкции для робота
name: Синхронизация из репозитория AI Studio

# Когда роботу нужно начинать работать?
on:
  # По расписанию: каждые 6 часов
  schedule:
    - cron: "0 */6 * * *"
  # А также по нажатию кнопки "Run workflow" во вкладке Actions
  workflow_dispatch:

# Список заданий для робота
jobs:
  # Называем наше единственное задание "sync"
  sync:
    # На каком компьютере будет работать робот (предоставляет GitHub)
    runs-on: ubuntu-latest
    # Шаги, которые нужно выполнить
    steps:
      # Шаг 1: Робот должен сначала "скачать" ваш рабочий репозиторий, чтобы было с чем работать
      - name: Скачиваем рабочий репозиторий
        uses: actions/checkout@v3
        with:
          # Для дальнейшей работы ему понадобится наш секретный ключ
          token: ${{ secrets.GH_PAT }}

     # Шаг 2: Главная работа по синхронизации
      - name: Синхронизируем и отправляем изменения
        run: |
          # Робот представляется системе
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          
          # Робот "запоминает" адрес вашего репозитория от AI
          git remote add upstream https://github.com/kostia-egik/transmissioncalk-aistudio.git
          
          # Робот скачивает все из репозитория от AI
          git fetch upstream
          
          # Робот смешивает код, отдавая предпочтение версии от AI при конфликтах
          git merge -X theirs upstream/main --allow-unrelated-histories -m "Автоматическая синхронизация из AI Studio"

          # Эта команда отменяет изменения для указанных файлов, которые пришли из репозитория AI
          git checkout HEAD -- README.md favicon.png
          
          # Робот сначала забирает последние изменения из рабочего репозитория
          git pull origin main --rebase
          
          # И только потом отправляет объединенный результат обратно
          git push origin main

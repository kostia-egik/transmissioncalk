# Название нашей инструкции для робота
name: Синхронизация из репозитория AI Studio

# Когда роботу нужно начинать работать?
on:
  # По расписанию: каждые 6 часов
  schedule:
    - cron: "0 */6 * * *"
  # А также по нажатию кнопки "Run workflow" во вкладке Actions
  workflow_dispatch:

# Список заданий для робота
jobs:
  # Называем наше единственное задание "sync"
  sync:
    # На каком компьютере будет работать робот (предоставляет GitHub)
    runs-on: ubuntu-latest
    # Шаги, которые нужно выполнить
    steps:
      # Шаг 1: Робот должен сначала "скачать" ваш рабочий репозиторий, чтобы было с чем работать
      - name: Скачиваем рабочий репозиторий
        uses: actions/checkout@v3
        with:
          # Для дальнейшей работы ему понадобится наш секретный ключ
          token: ${{ secrets.GH_PAT }}

      # Шаг 2: Главная работа по синхронизации
      - name: Синхронизируем и отправляем изменения
        run: |
          # Робот представляется системе, чтобы она знала, кто вносит изменения
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          
          # Робот "запоминает" адрес вашего первого репозитория (с кодом от AI)
          # ЗАМЕНИТЕ ЭТУ СТРОКУ НА СВОЮ!
          git remote add upstream https://github.com/kostia-egik/transmissioncalk-aistudio.git
          
          # Робот заглядывает в репозиторий от AI и скачивает все, что там есть
          git fetch upstream
          
          # Робот пытается аккуратно "смешать" код из репозитория AI с вашим рабочим кодом.
          # Если возникнет спорная ситуация (один и тот же файл изменен и там, и там),
          # робот отдаст предпочтение версии из репозитория AI.
          git merge -X theirs upstream/main --allow-unrelated-histories -m "Автоматическая синхронизация из AI Studio"
          
          # Робот отправляет результат (смешанный код) обратно в ваш рабочий репозиторий на GitHub
          git push origin main
